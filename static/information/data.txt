vc lab is part of srm this lab mainly concentrates on providing students with additional resources for their projects or extra assisstance for students 
samuel is the head of vc lab
Dr Arthi B and Dr Aruna   are incharge of vclab


Project name : ATTENDANCE MONITORING SYSTEM USING FACIAL RECOGNITION
Members : Amritha , Hajna , Tushar, Parsar, Prasak jain
Model used:hog encoding along with an ml algo
Abstract:As an educational institution, we face the pervasive issue of proxy attendance, which
compromises academic integrity and inefficiently utilizes valuable class time. Our current
manual attendance system is ill-suited to address this problem. To eradicate proxy attendance
and enhance time efficiency, we urgently need an automated attendance system with facial
recognition technology
Real time implementation:
1. Real-time Monitoring: The system provides real-time monitoring and attendance tracking,
allowing you to know who is present and when.
2. Automation: It automates the attendance tracking process, saving time and reducing the need
for manual record-keeping.
3. Accuracy: Facial recognition technology offers high accuracy in identifying individuals,
reducing the chances of unauthorized access or attendance fraud.
4. Alerts and Notifications: The system can send alerts or notifications when unauthorized
individuals are detected, enhancing security.
5. Data Insights: Attendance data collected over time can provide valuable insights into
attendance patterns and trends
Data set- created the required dataset using 2 images and generated 2k images with variations in brightness, contrast and all






Project name : human detector using intel neural stick
Members :   Vedhas ,   Siddhartha ,   Lakshaya
Abstract:This project proposes a real-time human detection system utilizing the Intel Neural Stick, a hardware accelerator designed for neural network inference tasks. The primary objective is to develop an efficient and accurate human detection model capable of running in real-time scenarios. The system employs a deep neural network architecture optimized for the Intel Neural Compute Stick to achieve low-latency detection while maintaining high accuracy. The proposed solution addresses the challenges of real-time human detection, making it suitable for applications such as surveillance, security, and human-computer interaction.
Model used :openvino  software and a pre trained model
Real time implementation:Surveillance Enhancement:
Real-time human detection strengthens surveillance systems, triggering alerts in restricted areas or during suspicious activities.
Smart Home Security:Integrates with smart home security, providing immediate alerts when unauthorized individuals are detected on the property.
Retail Analytics:Optimizes retail environments by analyzing customer behavior in real-time, aiding in store layout optimization and theft prevention.
Occupancy Monitoring:Monitors occupancy levels in buildings for energy management and compliance with regulations, improving overall efficiency.
Public Safety and Crowd Monitoring:Enhances public safety by identifying anomalies and potential threats in crowded areas, applicable in airports, train stations, and public events.
Data set:for human detection , no specific data set is required. It was done by inserting few images in a folder and added the path to the program




Project name : Automated attendence
Members : Parv.  , Garvesh Singh  , Chaitanya , Yash Sharma
Others details like data analysis 
Model used :
version 1 of the idea automated attendance
Abstract:

The Automated Attendance Management System (AAMS) is a solution designed to streamline the process of recording and managing student attendance. Traditionally, the process of recording attendance was completely manual, being unnecessarily time-consuming and prone to errors. Our approach aims to address the flaws in these conventional methods by leveraging modern technologies such as facial recognition and artificial intelligence.

Typically, attendance management involves the use of physical attendance registers or digital systems where students/staff sign in using their credentials. However, these methods can be inefficient and susceptible to fraudulent practices like proxy attendance or unauthorized sign-ins.

We thus propose a system that utilizes facial recognition technology to authenticate the presence of people at their designated places. This involves capturing images of students using a camera, which are then processed by an AI model to detect the authentic blinking movement and ensure that the person in question is a real person and not some still image. Furthermore, we plan on integrating Amazon Rekognition to verify the authenticity of detected faces.

The core components of our system include a web-based interface for teachers to manage attendance, Python scripts for server-side processing, and a MySQL database for storing information related to authorized people. The system also supports the creation of user accounts and the storage of facial images for recognition purposes.

We temporarily use browser cookies for real-time communication with users regarding their attendance status, such that relevant information is sent to the user after their attendance is marked. While the system is still constantly improving, our goal is to provide educational institutions as well as corporations with a robust and efficient solution for managing student/staff attendance, ultimately improving overall administrative processes and accountability.
version 1 :
https://github.com/chaitanya566/Auto-Attendence-recorder-EXPO
ersion 2:
https://github.com/chaitanya566/AI-Face-detection-method1
chaitanya is the head of attendance monitoring
Real time implementation:
Automated Attendance Tracking:Utilizes real-time human detection to automate attendance tracking in various settings, such as schools or workplaces.
Immediate Registration:Enables instantaneous registration of individuals as they enter a designated area, improving efficiency compared to traditional attendance methods.
Notification and Reporting:Sends immediate notifications or generates reports upon attendance events, allowing for quick insights into attendance patterns and trends.
Integration with Access Systems:Integrates seamlessly with access control systems, restricting entry or providing alerts based on attendance status, enhancing security measures.
Scalable and Efficient:Offers a scalable and efficient solution for managing attendance, reducing administrative burden and ensuring accurate and up-to-date records.







Project name : Linear Regression Model for Predicting COVID-19:
Abstractâ€”This study addresses the pressing need for accurate COVID-19 predictions by employing a Linear regression model implemented in Python. The comprehensive methodology involves rigorous data collection from reliable sources, meticulous preprocessing, and the application of Linear regression to forecast active cases over a temporal framework. The results are systematically presented, offering insights into the effectiveness of the model and its potential impact on managing the pandemic.
The methodology employed in this study follows a systematic and rigorous process to develop a predictive model for active COVID-19 cases over time, utilizing Linear regression and implemented in Python.
Members : Krish Mehta
Data Sourcing and Preprocessing:
Data acquisition is a crucial initial step, and this study relies on reputable repositories to ensure the reliability and integrity of the dataset. The selected data sources should encompass a broad representation of COVID-19 cases over time. Careful curation and preprocessing are conducted to clean and structure the data. This involves handling missing values, addressing inconsistencies, and transforming variables to ensure accuracy and consistency in the subsequent analysis.
Linear Regression Implementation:
The choice of employing a Linear regression model is justified based on specific characteristics that make it suitable for this study. The simplicity and interpretability of Linear regression align with the goal of developing an accessible and understandable model. Leveraging Python programming, the implementation utilizes essential libraries such as NumPy and Scikit-learn, streamlining the modeling process and tapping into the robust functionalities offered by these tools.
DATA ANALYSIS
Descriptive statistics are computed to provide an initial overview of the dataset. This involves measures such as mean, median, standard deviation, and other summary statistics that offer insights into the central tendencies and variability of the data. Visualizations play a crucial role in data analysis, and time-series plots of active COVID-19 cases are generated. These visualizations aid in revealing temporal patterns and trends, providing a qualitative understanding of how the number of cases evolves over time. Exploratory data analysis (EDA) is conducted to identify potential outliers or anomalies in the dataset, contributing to the refinement of subsequent modeling decisions.
MODEL DEVELOPMENT
The Linear regression model is constructed with a specific focus on predicting active COVID-19 cases based on the number of days since the outbreak. Python code snippets are presented to illustrate the model implementation, showcasing key steps such as variable selection and model training. The consideration of assumptions made during model development is an essential aspect of ensuring the model's reliability and validity. Assumptions related to Linearity, independence, homoscedasticity, and normality of residuals are carefully assessed and addressed as needed.
In essence, this comprehensive methodology ensures a robust foundation for the development and assessment of the Linear regression model. By systematically addressing data quality, leveraging appropriate tools for implementation, and conducting thorough data analysis, this study aims to contribute valuable insights into the dynamics of COVID-19 cases over time while providing a transparent and reproducible approach to model development.
Real time implementation:Dashboard Visualization:Presents real-time predictions and trends through interactive dashboards, allowing users to monitor the current and predicted impact of COVID-19 in different regions.
Alert System:Incorporates an alert system that triggers notifications or warnings based on predicted trends, helping authorities and the public take proactive measures to mitigate the spread.
Public Health Decision Support:Provides decision-makers with real-time insights to inform public health strategies, resource allocation, and policy adjustments, aiding in the ongoing management of the pandemic.



Project Name:Visual Nexus 1.0

Members: Shriya

Model Used:Version 1 - "Jarvis" Virtual Assistant
Abstract :
Visual Nexus Version 1 features "Jarvis", a virtual assistant utilizing libraries like speech_recognition and pyttsx3 for voice interaction, pywhatkit for tasks like playing YouTube songs, and more. Jarvis responds to voice commands and enhances user experience with its diverse functionalities.

Real-Time Implementation :
"Jarvis" aids users with tasks like fetching information and playing music via voice commands, enhancing productivity seamlessly.